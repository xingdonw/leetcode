class Solution(object):
    def generate(self, numRows):
        """
        :type numRows: int
        :rtype: List[List[int]]
        """
        ans = []                       #空数组
        if numRows == 0:               #num为0，返回空
            return ans
        for n in range (0,numRows):    #按照杨辉三角格式，设计二维数组，全为1
            ans.append([1]*(n+1))
        for i in range (1,numRows):    #从第一行开始到最后一行（1,2行无操作）
            for j in range (1,i):      #二维，从第一行到i
                ans[i][j]=ans[i-1][j-1]+ans[i-1][j]  #现在的数值=前一行前一个数+前一行这个数
        
                
            
        return ans


class Solution:
    def generate(self, n):
        """
        :type numRows: int
        :rtype: List[List[int]]
        """
        if n == 0:
            return []
        elif n == 1:
            results = [[1]]
        elif n == 2:
            results = [[1], [1,1]]
        elif n > 2:
            results = [[1], [1,1]]
            for i in range(3, n+1):
                newArray = [1]*i
                for j in range(1, i-1):
                    newArray[j] = results[-1][j-1] + results[-1][j]
                results.append(newArray)
        return results
