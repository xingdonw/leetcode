class Solution(object):
    def coinChange(self, coins, amount):
        """
        :type coins: List[int]
        :type amount: int
        :rtype: int
        """
        dp = [float("inf")] * (amount+1)                #dp储存需要硬币的最小数字，先是inf
        dp[0] = 0                                       #0元是0个
        for i in range(1,amount+1):                     #每个位置
            for j in range(len(coins)):                 #对有的硬币数进行
                if coins[j] <= i:                       #当有的硬币面额 <= 当前值，dp[i] = min(dp[i],dp[i-coins[j]]+1) 1代表这个面额一个
                    dp[i] = min(dp[i],dp[i-coins[j]]+1)
        if dp[-1]!=float("inf"):                        #如果最后一位是inf，没可能，-1，否则，返回最后一个
            return dp[-1]
        else:
            return -1
