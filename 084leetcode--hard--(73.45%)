class Solution:
    def largestRectangleArea(self, heights):
        
        """
        :type heights: List[int]
        :rtype: int
        """       
        i = 0
        max_value = 0
        stack = []
        heights.append(0)       
        while i < len(heights):            
            if len(stack) == 0 or heights[stack[-1]] <= heights[i]:
                stack.append(i)
                i += 1
            else:
                now_idx = stack.pop() 
                if len(stack) == 0:
                    max_value = max(max_value,i * heights[now_idx])
                else:                    
                    max_value = max(max_value,(i- stack[-1] -1) * heights[now_idx])                   
        return max_value
        
        

注释见085


'''
class Solution(object):
    def largestRectangleArea(self, heights):
        """
        :type heights: List[int]
        :rtype: int
        """
        maxarea=0
        for i in range(len(heights)):
            start=heights[i]
            for j in range(i,len(heights)):
                if heights[j]<start:
                    start=heights[j]
                    maxarea=max(maxarea,(j-i+1)*start)
                else:
                    maxarea=max(maxarea,(j-i+1)*start)
        return maxarea
#96/98
'''
