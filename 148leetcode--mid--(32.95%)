# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def sortList(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        while head==None or head.next==None:
            return head
        fast=head
        slow=ListNode(None)
        slow.next=head
        while fast and fast.next:
            fast=fast.next.next
            slow=slow.next
        head1=head
        head2=slow.next
        slow.next=None                                     #???
        p1,p2=self.sortList(head1),self.sortList(head2)    #p1,p2两段链表排序
        ans=ListNode(0)
        p=ans
        while p1!=None and p2!=None:
            if p1.val <= p2.val:
                p.next=p1
                p1=p1.next
                p=p.next
            else:
                p.next=p2
                p2=p2.next
                p=p.next
        if p1!=None:
            p.next=p1
        if p2!=None:
            p.next=p2
        return ans.next
        
  #链表做法
