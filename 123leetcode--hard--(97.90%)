class Solution:
    def maxProfit(self, prices):
        """
        :type prices: List[int]
        :rtype: int
        """
        '''
        #198/200
        res=0
        for i in range(len(prices)):
            l2=len(prices[i:])                              #把数组分为l1和l2两段，分别测长
            l1=len(prices)-l2                               
            res1=0                                          #res1,res2代表两段中盈利最大值       
            res2=0
            for j in range(l1-1):                           #分别遍历，求最大值
                for k in range(j+1,l1):
                    res1=max(res1,prices[k]-prices[j])      
            for p in range(l1,len(prices)-1):
                for q in range(p+1,len(prices)):
                    res2=max(res2,prices[q]-prices[p])
            res=max(res,res1+res2)
        return res
        '''
        
        if not prices:
            return 0

        len_prices = len(prices)
        buy1, sell1, buy2, sell2 = -prices[0], 0, -prices[0], 0

        for i in range(1, len_prices):
            buy1 = max(buy1, -prices[i])                    #买入
            sell1 = max(sell1, buy1 + prices[i])            #买入后再卖出
            buy2 = max(buy2, sell1 - prices[i])             #买入后再卖出再买入
            sell2 = max(sell2, buy2 + prices[i])            #买入后再卖出再买入再卖出
        return max(0, sell1, sell2)
