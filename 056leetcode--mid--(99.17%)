# Definition for an interval.
# class Interval:
#     def __init__(self, s=0, e=0):
#         self.start = s
#         self.end = e

class Solution:
    def merge(self, intervals: 'List[Interval]') -> 'List[Interval]':
        if len(intervals)<=1:
            return intervals
        intervals.sort(key = lambda x: x.start)                                 #先按照每一项的第一个大小，重新排序
        res=[]
        start=intervals[0].start
        finish=intervals[0].end
        tmp=[]
        for i in range(1,len(intervals)):
            if finish < intervals[i].start:                                     #[8,10],[15,18]
                res.append([start,finish])
                start = intervals[i].start
                finish = intervals[i].end
            else:                               
                if finish <= intervals[i].end and start < intervals[i].start:   #[1,3],[2,6]
                    finish = intervals[i].end
                if finish <= intervals[i].end and start >= intervals[i].start:  #[1,4],[0,4]
                    start = intervals[i].start
                    finish = intervals[i].end
                if finish > intervals[i].end and start >= intervals[i].start:   #[1,4],[0,1]
                    if start <= intervals[i].end:                               
                        start = intervals[i].start
                    else:                                                       #[1,4],[0,0]
                        res.append([start,finish])
                        start=intervals[i].start
                        finish=intervals[i].end                    
        res.append([start,finish])
        return res
                
