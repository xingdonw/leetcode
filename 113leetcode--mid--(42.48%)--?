# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def pathSum(self, root, sum):
        """
        :type root: TreeNode
        :type sum: int
        :rtype: List[List[int]]
        """
        def dfs(root,sum,path,res):
            if root:
                path.append(root.val)
                sum=sum-root.val
                left=dfs(root.left,sum,path,res)
                right=dfs(root.right,sum,path,res)      #递归得到从顶部到叶子的路径和
                if not left and not right and sum==0:
                    res.append(path+[])                 #?????path是一个矩阵包含可行的路径
                path.pop()                              #?????
                return True                             #?????
        res=[]
        dfs(root,sum,[],res)
        return res
