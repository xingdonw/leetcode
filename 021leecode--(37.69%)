# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def mergeTwoLists(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        head = dummy = ListNode(0)        #创建头结点
        while l1!=None and l2!=None:    
            if l1.val <= l2.val:
                head.next=l1              #head的下一个节点是l1
                l1=l1.next                #l1=l1的下一个节点
            else:
                head.next = l2
                l2 = l2.next
            head= head.next
        if l1 == None:
            head.next=l2
        elif l2 == None:
            head.next=l1
        return dummy.next
    
    
 class Solution:
    def mergeTwoLists(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        temp = ListNode(-1)
        head = temp
        while l1 and l2:
            if l1.val > l2.val:
                temp.next = l2
                l2 = l2.next
            else:
                temp.next = l1
                l1 = l1.next
            temp = temp.next
        if l1:
            temp.next = l1
        else:
            temp.next = l2
        return head.nex
    
