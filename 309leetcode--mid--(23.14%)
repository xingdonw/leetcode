class Solution:
    def maxProfit(self, prices):
        """
        :type prices: List[int]
        :rtype: int
        """
        if prices==[]:
            return 0
        cash=[0]*len(prices)                #手里没股票收益
        hold=[0]*len(prices)                #手里有股票收益
        hold[0]=-prices[0]
        for i in range(1,len(prices)):
            if i-2>=0:
                k=cash[i-2]-prices[i]
            else:
                k=-prices[i]                                #k代表，如果今天有股票在手，两天前没股票的收益-今天的价格
            hold[i]=max(hold[i-1],k)                        #max(今天买股票是前天卖掉股票的收益-今天股票的价格，昨天手里有股票的收益）
            cash[i]=max(hold[i-1]+prices[i],cash[i-1])      #max(昨天手里有股票的收益+今天卖股票的收益，昨天手里没有股票的收益)
        return max(cash)
