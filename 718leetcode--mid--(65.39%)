class Solution:
    def findLength(self, A, B):
        """
        :type A: List[int]
        :type B: List[int]
        :rtype: int
        """
        a=len(A)
        b=len(B)
        dp=[[0 for i in range(b+1)]for j in range(a+1)]
        for i in range(1,a+1):
            for j in range(1,b+1):
                if A[i-1]==B[j-1]:
                    dp[i][j]=dp[i-1][j-1]+1
        res=0
        for i in range(len(dp)):
            res=max(max(dp[i]),res)
        return res
        
 #维护矩阵DP，DP[i][j]代表以A[i-1]与B[j-1]结尾的公共字串的长度，公共字串必须以A[i-1]，B[j-1]结束，即当A[i-1] == B[j-1]时，
 DP[i][j] = DP[i-1][j-1] + 1; 当A[i-1] != B[j-1]时，以A[i-1]和B[j-1]结尾的公共字串长度为0,DP[i][j] = 0。
 输出最大的公共字串的长度即为最长重复字串。
