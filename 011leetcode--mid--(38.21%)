class Solution(object):
    def maxArea(self, height):
        """
        :type height: List[int]
        :rtype: int
        """
        i=0                                        #i左坐标，j右坐标
        j=len(height)-1
        v=(j-i)*min(height[i],height[j])           #v体积
        while i<j:
            v=max(v,(j-i)*min(height[i],height[j]))
            if height[i]<=height[j]:
                i=i+1
            else:
                j=j-1
        return v
        
 
class Solution:
    def maxArea(self, height):
        """
        :type height: List[int]
        :rtype: int
        """
        length = len(height)
        left, right = 0, length-1
        ans = 0
        while left < right:
            if height[left] <= height[right]:
                contain = (right - left) * height[left]
                left += 1
            else:
                contain = (right - left) * height[right]
                right -= 1
            if contain > ans:
                ans = contain
        return ans
