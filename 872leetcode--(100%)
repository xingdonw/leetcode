# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def leafSimilar(self, root1, root2):
        """
        :type root1: TreeNode
        :type root2: TreeNode
        :rtype: bool
        """
        res1=[]
        res2=[]
        if root1 == root2 == None:      #均为空，返回true
            return True
        if (root1 == None and root2 !=None) or (root1 != None and root2 ==None):    #一个空一个不空，返回false
            return False
        
        def dfs(root,res):              #dfs
            if not root.left and not root.right:    #如果根左右都是空，res填入这个底部leaf
                res.append(root.val)
            if root.left:                           #如果有左枝，dfs左枝
                dfs(root.left,res)
            if root.right:                          #如果有右枝，dfs右枝
                dfs(root.right,res)
            return res                              #全部跑完后，返回res的数组
        
        l1 = dfs(root1,res1)                        #l1是root1，l2是root2
        l2 = dfs(root2,res2)
        if l1 == l2:
            return True
        else:
            return False
