# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def averageOfLevels(self, root):
        """
        :type root: TreeNode
        :rtype: List[float]
        """
        res = [0.0] * 1000                          #储存每一层的和
        num = [0] * 1000                            #储存每一层有多少个数字
        depth = 0                                   #层数
        def dfs(root,depth):
            if root:                                #root存在，res和num此层 + value和1，左右枝dfs
                res[depth] += root.val
                num[depth] += 1
                dfs(root.left,depth+1)
                dfs(root.right,depth+1)
                
        dfs(root,depth)
        total = []                                  #储存结果
        for i in range(len(res)):
            if num[i]!=0:                           #这一层没数，结果append结果
                total.append(res[i]/num[i])
        return total
