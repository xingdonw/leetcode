class Solution:
    def threeSumMulti(self, A: List[int], target: int) -> int:
        dict = collections.Counter(A)                           #Counter,返回类似字典，统计好次数，一样使用dict的相关用法
        count = 0
        
        for key1,value1 in dict.items():
            for key2,value2 in dict.items():
                tmp = target - key1 - key2
                if key1 == key2 == tmp:                         #都相同
                    count += value1*(value1-1)*(value1-2)//6    #3个只用一种，3*2*1//6=1
                elif (key1 == key2) and (key1 != tmp):          #前两个相同，第三个不同，防止重复
                    count += value1*(value1-1)//2*dict[tmp]
                elif key1 < key2 and key2 < tmp:                #都不相同，防止重复
                    count += value1*value2*dict[tmp]
        return count % (10**9 + 7)                              #返回模
