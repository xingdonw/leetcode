class Solution:
    def minCost(self, costs: List[List[int]]) -> int:
        if not costs:
            return 0
        if len(costs) == 1:
            return min(costs[0])
        
        dp = [[0 for i in range(len(costs[0]))]for j in range(len(costs)+1)]
        #dp[j] = 这一步颜色取j的成本 + 上一步颜色不取j的成本的最小值
        for i in range(1,len(costs)+1):
            dp[i][0] = costs[i-1][0] + min(dp[i-1][1],dp[i-1][2])   
            dp[i][1] = costs[i-1][1] + min(dp[i-1][0],dp[i-1][2])
            dp[i][2] = costs[i-1][2] + min(dp[i-1][1],dp[i-1][0])
        return min(dp[-1])
