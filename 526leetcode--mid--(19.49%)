class Solution:
    def countArrangement(self, N: int) -> int:
        
        self.count = 0 
        visited = [0] *(N+1)
        
        def dfs(N,visited,now):   #N-->多少个数，count-->多少个beautiful数组，visited-->访问过的位置，now-->正在访问的位置
            if now > N:                 #如果能走到最后一个数，可能性+1
                self.count+=1
                return
            for i in range(1,N+1):
                if visited[i] == 0 and (now%i == 0 or i%now == 0):  #没访问过，且符合条件
                    visited[i] = 1                                  #标记访问过
                    dfs(N,visited,now+1)                            #dfs
                    visited[i] = 0                                  #如果不行，此位置=0，重新循环
        
        dfs(N,visited,1)
        return self.count
