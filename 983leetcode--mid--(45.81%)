class Solution:
    def mincostTickets(self, days: List[int], costs: List[int]) -> int:
        dp = [0] * 366                  #dp[i]代表着我们旅行到i天为止需要的最少旅行价格
        for i in range(1,366):
            if i not in days:           #如果这一天不出行，等于前一天的花费
                dp[i] = dp[i-1]
            else:                       #如果出行，去最小值min(昨天+1天票，7天前+7天票，30天前+30天票)
                dp[i] = min(costs[0]+dp[i-1],costs[1]+dp[max(0,i-7)],costs[2]+dp[max(0,i-30)])
        return dp[days[-1]]
