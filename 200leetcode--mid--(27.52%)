class Solution:
    def numIslands(self, grid):
        """
        :type grid: List[List[str]]
        :rtype: int
        """
        count=0
        
        def dfs(grid,i,j):
            dirs = [[-1, 0], [0, 1], [0, -1], [1, 0]]       #每一步i，j加和减
            grid[i][j] = "0"                                #“1”置“0”
            for dir in dirs:
                nr, nc = i + dir[0], j + dir[1]             #改变i，j的值
                if nr >= 0 and nc >= 0 and nr < len(grid) and nc < len(grid[0]):  #新i，j在index范围内
                    if grid[nr][nc] == "1":                 #如果也等于“1”，调用dfs
                        dfs(grid, nr, nc)                   

     
        for i in range(0,len(grid)):              
            for j in range(0,len(grid[0])):
                if grid[i][j] == "1":
                    dfs(grid,i,j)
                    count=count+1
        return count
