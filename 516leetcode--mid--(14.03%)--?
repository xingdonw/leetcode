class Solution:
    def longestPalindromeSubseq(self, s):
        """
        :type s: str
        :rtype: int
        """
        dp=[[0 for i in range(len(s))] for j in range(len(s))]          #dp[j][i]代表从j到i之间最长的回文串的长度
        for i in range(len(s)):                                         #本身，只有1
            dp[i][i]=1
        for i in range(1,len(s)):                                       
            for j in range(i-1,-1,-1):
                if s[j]==s[i]:                                          #i，j相同，2+前一个dp【j+1】【i-1】的长度
                    dp[j][i]=2+dp[j+1][i-1]
                else:
                    dp[j][i]=max(dp[j+1][i],dp[j][i-1])                 #不同，就是相邻的最长的
        return dp[0][len(s)-1]
