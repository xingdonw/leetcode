class Solution(object):
    def exist(self, board, word):
        if not board:
            return False
        for i in range(len(board)):
            for j in range(len(board[0])):
                if self.dfs(board, i, j, word):
                    return True
        return False

    # check whether can find word, start at (i,j) position    
    def dfs(self, board, i, j, word):
        if len(word) == 0: # all the characters are checked
            return True
        if i<0 or i>=len(board) or j<0 or j>=len(board[0]) or word[0]!=board[i][j]:
            return False
        tmp = board[i][j]  # first character is found, check the remaining part
        board[i][j] = "#"  # avoid visit agian 
        # check whether can find "word" along one direction
        res = self.dfs(board, i+1, j, word[1:]) or self.dfs(board, i-1, j, word[1:]) \
        or self.dfs(board, i, j+1, word[1:]) or self.dfs(board, i, j-1, word[1:])
        board[i][j] = tmp
        return res
        
        
        
        



75/87??????????????????

class Solution(object):
    def exist(self, board, word):
        """
        :type board: List[List[str]]
        :type word: str
        :rtype: bool
        """
        if len(board)==0:
            return False
        visited = [[0 for i in range(len(board[0]))]for j in range(len(board))]
        
        def dfs(i,j,tmp,visited):
            visited[i][j] = 1
            if len(word) == tmp:
                return True
            
            delta = [(0,1),(0,-1),(1,0),(-1,0)]
            for u,v in delta:
                x=u+i
                y=v+j
                if 0 <= x <len(board) and 0<= y <len(board[0]) and board[x][y] == word[tmp] and visited[x][y] == 0:
                    tmp+=1
                    if dfs(x,y,tmp,visited):
                        return True
            visited[i][j]=0
            return False
               
        
        for i in range(len(board)):
            for j in range(len(board[0])):
                if board[i][j] == word[0]:
                    tmp = 1
                    if dfs(i,j,tmp,visited)==True:
                        return True
        return False
