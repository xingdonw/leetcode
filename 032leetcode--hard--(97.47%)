class Solution:
    def longestValidParentheses(self, s):
        """
        :type s: str
        :rtype: int
        """
        #连续有效！！！！！！！
        if len(s)<=1:
            return 0
        dp=[0]*len(s)
        for i in range(1,len(s)):
            if s[i]==")":                       #")"合法的右半部
                if (i-1)>=0 and s[i-1]=="(":    #左有，并且旁边的是"(",合法，最大总数+2
                    dp[i]=dp[i-2]+2
                if (i-1)>=0 and s[i-1]==")":    #左有，但是旁边是")"不合法，找到之前没有合法的()前面一个位置--> i-1-dp[i-1]
                    if (i-1-dp[i-1])>=0 and s[i-1-dp[i-1]]=="(":    
                        dp[i]=dp[i-1]+2+dp[i-1-dp[i-1]-1]   #连续，所以前一个+2+对称"("前面的dp值
                    
        return max(dp)
